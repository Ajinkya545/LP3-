import java.util.Arrays;
import java.util.Comparator;

public class Main {
    public static void print(int[][] board){
        int n = board.length;
        for(int i = 0; i < n ; i++){
            for(int j = 0; j < n; j++){
                System.out.print(board[i][j] + " ");
            }
            System.out.println();
        }
        System.out.println();
    }

    public static boolean isSafe(int[][] board, int row, int col){
        int n = board.length;
        for(int i = 0; i < col; i++){
            if(board[row][i] == 1){
                return false;
            }
        }
        for(int i = row, j = col; i >= 0 && j >= 0; i--,j--){
            if(board[i][j] == 1){
                return false;
            }
        }
        for(int i = row, j = col; i < n && j >= 0; i++,j--){
            if(board[i][j] == 1){
                return false;
            }
        }
        return true;
    }

    public static boolean solvenNQ(int[][] board,int col){
        int n = board.length;
        if(col >= n){
            print(board);
            return true;
        }

        boolean res = false;
        for(int i = 0; i < n; i++){
            if(isSafe(board, i, col)){
                board[i][col] = 1;

                res = solvenNQ(board, col+1) || res;

                board[i][col] = 0;
                if(res){
                    break;
                }
            }
        }
        return res;
    }

    public static void main(String[] args){
        int n = 4;
        int[][] board = new int[n][n];
        if(!solvenNQ(board,0)){
            System.out.print("no solution");
        }
    }
}
